<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on Vijay Thakorlal's Blog</title><link>https://vijayjt.github.io/tags/golang/</link><description>Recent content in golang on Vijay Thakorlal's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 09 Jan 2024 18:23:48 +0000</lastBuildDate><atom:link href="https://vijayjt.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Istio WASMPlugin to modify Envoy functionality</title><link>https://vijayjt.github.io/posts/istio-wasm-plugins-with-go/</link><pubDate>Tue, 09 Jan 2024 18:23:48 +0000</pubDate><guid>https://vijayjt.github.io/posts/istio-wasm-plugins-with-go/</guid><description>In a previous post, we went through an example of using Envoy Filters to modify the envoy proxy behaviour in Istio. In this post we will discuss using WASMPlugin.
The WebAssembly for Proxies ABI Specification provides an application binary interface specification for proxies - while originally developed for Envoy it is not envoy specific. There are SDKs for C++, Go, Rust and AssemblyScript itself.
We will be using the Go SDK for Proxy-Wasm, which uses TinyGo - mainly because I don&amp;rsquo;t know Rust and I have not written C++ for a long time &amp;#x1f604;</description></item></channel></rss>