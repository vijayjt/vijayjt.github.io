<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Vijay Thakorlal's Blog</title><link>https://vijayjt.github.io/posts/</link><description>Recent content in Posts on Vijay Thakorlal's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 09 Jan 2024 18:23:48 +0000</lastBuildDate><atom:link href="https://vijayjt.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Istio WASMPlugin to modify Envoy functionality</title><link>https://vijayjt.github.io/posts/istio-wasm-plugins-with-go/</link><pubDate>Tue, 09 Jan 2024 18:23:48 +0000</pubDate><guid>https://vijayjt.github.io/posts/istio-wasm-plugins-with-go/</guid><description>In a previous post, we went through an example of using Envoy Filters to modify the envoy proxy behaviour in Istio. In this post we will discuss using WASMPlugin.
The WebAssembly for Proxies ABI Specification provides an application binary interface specification for proxies - while originally developed for Envoy it is not envoy specific. There are SDKs for C++, Go, Rust and AssemblyScript itself.
We will be using the Go SDK for Proxy-Wasm, which uses TinyGo - mainly because I don&amp;rsquo;t know Rust and I have not written C++ for a long time &amp;#x1f604;</description></item><item><title>Istio Envoy Filters with Lua</title><link>https://vijayjt.github.io/posts/istio-envoy-filters-lua/</link><pubDate>Tue, 09 Jan 2024 11:05:23 +0000</pubDate><guid>https://vijayjt.github.io/posts/istio-envoy-filters-lua/</guid><description>Istio Envoy Filters provides a way customise Envoy&amp;rsquo;s behaviour. They can be useful when you have a requirement that cannot be fulfilled out of the box by Istio.
Warning
When using Envoy Filters we are using low-level APIs that can change between Istio versions. It is therefore important that you have robust tests in place and review change logs/release notes carefully for changes that may break your filters.
Envoy itself has a number of built-in filters but we are specifically going to talk about Lua filters which allows Lua code to be executed during both the request and response flows.</description></item><item><title>Using fzf with Azure AAD Login to SSH interactively to Azure VMs with fzf</title><link>https://vijayjt.github.io/posts/aad-login-ssh-fzf/</link><pubDate>Fri, 05 Jan 2024 19:05:53 +0000</pubDate><guid>https://vijayjt.github.io/posts/aad-login-ssh-fzf/</guid><description>AAD Login or EntraID login now, is a feature that allows you to login to Azure VMs using your Entra ID account.
It requires that you have the Virtual Machine Login or Virtual Machine Administrator Login roles (the former logs you in as a regular user and the latter an administrator).
fzf is a command-line fuzzy finder, as the project site states it is an interactive UNIX filter for command-line that can be used with any list, files, etc.</description></item><item><title>Authenticate with GKE and AKS clusters interactively with fzf</title><link>https://vijayjt.github.io/posts/gke-login-fzf/</link><pubDate>Fri, 05 Jan 2024 10:51:41 +0000</pubDate><guid>https://vijayjt.github.io/posts/gke-login-fzf/</guid><description>fzf is a command-line fuzzy finder, as the project site states it is an interactive UNIX filter for command-line that can be used with any list, files, etc.
Following on from our other posts on using fzf, here is an example of a function that can be used to to authenticate/login to a GKE cluster interactively:
function gcp_gke_login(){ PROJECT=$(gcloud projects list --format=&amp;#34;value(projectId)&amp;#34; | fzf --tac) RESULT=$(gcloud container clusters list --project=$PROJECT --format=&amp;#34;value(name,location)&amp;#34; | fzf --tac) CLUSTER_NAME=$(echo &amp;#34;$RESULT&amp;#34; | awk &amp;#39;{print $1}&amp;#39;) REGION=$(echo &amp;#34;$RESULT&amp;#34; | awk &amp;#39;{print $2}&amp;#39;) KUBECONFIG_CLUSTER=gke_&amp;#34;$PROJECT&amp;#34;_&amp;#34;$REGION&amp;#34;_&amp;#34;$CLUSTER_NAME&amp;#34; echo &amp;#34;Manipulating kubeconfig entry using cluster: $KUBECONFIG_CLUSTER&amp;#34; gcloud config set component_manager/disable_update_check true gcloud container clusters get-credentials --project=&amp;#34;${PROJECT}&amp;#34; --region=&amp;#34;${REGION}&amp;#34; &amp;#34;${CLUSTER_NAME}&amp;#34; } We can use fzf with the Azure CLI in a similar fashion to login to an AKS cluster:</description></item><item><title>Using gcloud with fzf to interactively SSH to GCP VMs</title><link>https://vijayjt.github.io/posts/gcp-ssh-fzf/</link><pubDate>Fri, 05 Jan 2024 10:15:10 +0000</pubDate><guid>https://vijayjt.github.io/posts/gcp-ssh-fzf/</guid><description>The gcloud compute ssh command is a wrapper around SSH that is used to SSH to VMs in GCP.
fzf is a command-line fuzzy finder, as the project site states it is an interactive UNIX filter for command-line that can be used with any list, files, etc.
The example function below (which can be added to your bash or zsh profile) can be used to interactively select the VM to login to using gcloud compute ssh or SCP a file to a instance.</description></item></channel></rss>